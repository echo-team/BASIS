function isFunction(t){return t instanceof Function}function isArray(t){return t instanceof Array}function isObject(t){return t instanceof Object}function isElement(t){return t instanceof Element}function isText(t){return t instanceof Text}function isString(t){return"string"==typeof t}Element.prototype.setEventListeners=function(t){if(!t||!isObject(t))return void console.warn("ERROR: argument passed to setEventListeners method is not an Object. Skipping.");for(var e in t)isArray(t[e])||(t[e]=[t[e]]),t[e].forEach(function(t){return isFunction(t)?void this.addEventListener(e,t):void console.warn('ERROR: cannot set something except Function as an event listener to event, called "'+e+'". Skipping.')}.bind(this))},Element.prototype.removeCSS=function(){Array.from(arguments).forEach(function(t){isString(t)?this.classList.remove(t):isArray(t)?this.setCSS.apply(this,t):console.warn("ERROR: cannot remove something except String as an CSS-class. Skipping.")}.bind(this))},Element.prototype.setCSS=function(){Array.from(arguments).forEach(function(t){isString(t)?this.classList.add(t):isArray(t)?this.setCSS.apply(this,t):console.warn("ERROR: cannot set something except String as an CSS-class. Skipping.")}.bind(this))},Element.prototype.setAttributes=function(t){if(!isObject(t))return void console.warn("ERROR: argument passed to setAttributes method is not an Object. Skipping.");for(var e in t)t[e]?this.setAttribute(e,t[e]):this.removeAttribute(e)},Element.prototype.removeAttributes=function(){Array.from(arguments).forEach(function(t){isString(t)?this.removeAttribute(t):isArray(t)?this.removeAttributes.apply(this,t):console.warn("ERROR: cannot remove attribute because given id is not a String. Skipping.")}.bind(this))},Element.prototype.setProperties=function(t){this.setEventListeners(t.eventListeners),this.setCSS(t.classList),delete t.eventListeners,delete t.classList,this.setAttributes(t)},Element.prototype.appendChildren=function(){Array.from(arguments).forEach(function(t){isElement(t)?this.appendChild(t):isText(t)||isString(t)?this.innerHTML+=t:isArray(t)&&!isString(t)?this.appendChildren.apply(this,t):console.warn("ERROR: cannot append something except String, Text or Element as an DOMElement. Skipping.")}.bind(this))},Document.prototype.newElement=function(){if("string"!=typeof arguments[0])return console.warn("ERROR: first argument passed to newElement method is not an String. Skipping."),null;var t=document.createElement(arguments[0]);return!arguments[1]||isArray(arguments[1])||isElement(arguments[1])||t.setProperties(arguments[1]),t.appendChildren.apply(t,Array.from(arguments).slice(1)),t},Element.prototype.newChildElement=function(){var t=document.newElement.apply(null,arguments);return t&&this.appendChild(t),t};
